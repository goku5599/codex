import asyncio
import random
import requests
from faker import Faker
from telegram import Bot

BINLIST_API_URL = "https://binlist.io/lookup/"
country_emojis = {
  "Canada": "üá®üá¶",
  "United States": "üá∫üá∏",
  "United Kingdom": "üá¨üáß",
  "Spain": "üá™üá∏",
  "France": "üá´üá∑",
  "Germany": "üá©üá™",
  "Italy": "üáÆüáπ",
  "Australia": "üá¶üá∫",
  "Japan": "üáØüáµ",
  "Russia": "üá∑üá∫",
  "Brazil": "üáßüá∑",
  "India": "üáÆüá≥",
  "China": "üá®üá≥",
  "South Korea": "üá∞üá∑",
  "Mexico": "üá≤üáΩ",
  "South Africa": "üáøüá¶",
  "Egypt": "üá™üá¨",
  "Turkey": "üáπüá∑",
  "Argentina": "üá¶üá∑",
  "New Zealand": "üá≥üáø",
  "Greece": "üá¨üá∑",
  "Nigeria": "üá≥üá¨",
  "Kenya": "üá∞üá™",
  "Sweden": "üá∏üá™",
  "Norway": "üá≥üá¥",
  "Denmark": "üá©üá∞",
  "Finland": "üá´üáÆ",
  "Netherlands": "üá≥üá±",
  "Belgium": "üáßüá™",
  "Austria": "üá¶üáπ",
  "Switzerland": "üá®üá≠",
  "Portugal": "üáµüáπ",
  "Ireland": "üáÆüá™",
  "Poland": "üáµüá±",
  "Hungary": "üá≠üá∫",
  "Czech Republic": "üá®üáø",
  "Slovakia": "üá∏üá∞",
  "Croatia": "üá≠üá∑",
  "Serbia": "üá∑üá∏",
  "Bulgaria": "üáßüá¨",
  "Romania": "üá∑üá¥",
  "Ukraine": "üá∫üá¶",
  "Belarus": "üáßüáæ",
  "Estonia": "üá™üá™",
  "Latvia": "üá±üáª",
  "Lithuania": "üá±üáπ",
  "Slovenia": "üá∏üáÆ",
  "Bosnia and Herzegovina": "üáßüá¶",
  "Montenegro": "üá≤üá™",
  "Macedonia": "üá≤üá∞",
  "Albania": "üá¶üá±",
  "Kosovo": "üáΩüá∞",
  "Moldova": "üá≤üá©",
  "Georgia": "üá¨üá™",
  "Armenia": "üá¶üá≤",
  "Azerbaijan": "üá¶üáø",
  "Kazakhstan": "üá∞üáø",
  "Turkmenistan": "üáπüá≤",
  "Uzbekistan": "üá∫üáø",
  "Tajikistan": "üáπüáØ",
  "Kyrgyzstan": "üá∞üá¨",
  "Afghanistan": "üá¶üá´",
  "Pakistan": "üáµüá∞",
  "Nepal": "üá≥üáµ",
  "Bhutan": "üáßüáπ",
  "Sri Lanka": "üá±üá∞",
  "Bangladesh": "üáßüá©",
  "Myanmar": "üá≤üá≤",
  "Thailand": "üáπüá≠",
  "Cambodia": "üá∞üá≠",
  "Vietnam": "üáªüá≥",
  "Laos": "üá±üá¶",
  "Malaysia": "üá≤üáæ",
  "Singapore": "üá∏üá¨",
  "Indonesia": "üáÆüá©",
  "Brunei": "üáßüá≥",
  "Philippines": "üáµüá≠",
  "Timor-Leste": "üáπüá±",
  "Papua New Guinea": "üáµüá¨",
  "Solomon Islands": "üá∏üáß",
  "Vanuatu": "üáªüá∫",
  "Fiji": "üá´üáØ",
  "Tuvalu": "üáπüáª",
  "Kiribati": "üá∞üáÆ",
  "Marshall Islands": "üá≤üá≠",
  "Micronesia": "üá´üá≤",
  "Palau": "üáµüáº",
  "Nauru": "üá≥üá∑",
  "Tonga": "üáπüá¥",
  "Samoa": "üáºüá∏",
  "Haiti": "üá≠üáπ",
  "Jamaica": "üáØüá≤",
  "Cuba": "üá®üá∫",
  "Dominican Republic": "üá©üá¥",
  "Puerto Rico": "üáµüá∑",
  "The Bahamas": "üáßüá∏",
  "Barbados": "üáßüáß",
  "Trinidad and Tobago": "üáπüáπ",
  "Grenada": "üá¨üá©",
  "Saint Vincent and the Grenadines": "üáªüá®",
  "Saint Lucia": "üá±üá®",
  "Antigua and Barbuda": "üá¶üá¨",
  "Saint Kitts and Nevis": "üá∞üá≥",
  "Belize": "üáßüáø",
  "Guatemala": "üá¨üáπ",
  "El Salvador": "üá∏üáª",
  "Honduras": "üá≠üá≥",
  "Nicaragua": "üá≥üáÆ",
  "Costa Rica": "üá®üá∑",
  "Panama": "üáµüá¶",
  "Colombia": "üá®üá¥",
  "Ecuador": "üá™üá®",
  "Peru": "üáµüá™",
  "Bolivia": "üáßüá¥",
  "Chile": "üá®üá±",
  "Paraguay": "üáµüáæ",
  "Uruguay": "üá∫üáæ",
  "Venezuela": "üáªüá™",
  "Guyana": "üá¨üáæ",
  "Suriname": "üá∏üá∑",
  "Mauritania": "üá≤üá∑",
  "Senegal": "üá∏üá≥",
  "Gambia": "üá¨üá≤",
  "Guinea-Bissau": "üá¨üáº",
  "Guinea": "üá¨üá≥",
  "Sierra Leone": "üá∏üá±",
  "Liberia": "üá±üá∑",
  "Ivory Coast": "üá®üáÆ",
  "Ghana": "üá¨üá≠",
  "Togo": "üáπüá¨",
  "Benin": "üáßüáØ",
  "Niger": "üá≥üá™",
  "Mali": "üá≤üá±",
  "Burkina Faso": "üáßüá´",
  "Niger": "üá≥üá™",
  "Mali": "üá≤üá±",
  "Burkina Faso": "üáßüá´",
  "Mauritania": "üá≤üá∑",
  "Senegal": "üá∏üá≥",
  "Gambia": "üá¨üá≤",
  "Guinea-Bissau": "üá¨üáº",
  "Guinea": "üá¨üá≥",
  "Sierra Leone": "üá∏üá±",
  "Liberia": "üá±üá∑",
  "Ivory Coast": "üá®üáÆ",
  "Ghana": "üá¨üá≠",
  "Togo": "üáπüá¨",
  "Benin": "üáßüáØ",
  "Niger": "üá≥üá™",
  "Mali": "üá≤üá±",
  "Burkina Faso": "üáßüá´",
  "Guinea": "üá¨üá≥",
  "Sierra Leone": "üá∏üá±",
  "Liberia": "üá±üá∑",
  "Ivory Coast": "üá®üáÆ",
  "Ghana": "üá¨üá≠",
  "Togo": "üáπüá¨",
  "Benin": "üáßüáØ",
  "Niger": "üá≥üá™",
  "Mali": "üá≤üá±",
  "Burkina Faso": "üáßüá´",
  "Nigeria": "üá≥üá¨",
  "Cameroon": "üá®üá≤",
  "Chad": "üáπüá©",
  "Central African Republic": "üá®üá´",
  "Sudan": "üá∏üá©",
  "South Sudan": "üá∏üá∏",
  "Uganda": "üá∫üá¨",
  "Rwanda": "üá∑üáº",
  "Burundi": "üáßüáÆ",
  "Democratic Republic of the Congo": "üá®üá©",
  "Republic of the Congo": "üá®üá¨",
  "Gabon": "üá¨üá¶",
  "Equatorial Guinea": "üá¨üá∂",
  "Sao Tome and Principe": "üá∏üáπ",
  "Morocco": "üá≤üá¶",
  "Western Sahara": "üá™üá≠",
  "Algeria": "üá©üáø",
  "Tunisia": "üáπüá≥",
  "Libya": "üá±üáæ",
  "Egypt": "üá™üá¨",
  "Sudan": "üá∏üá©",
  "South Sudan": "üá∏üá∏",
  "Uganda": "üá∫üá¨",
  "Rwanda": "üá∑üáº",
  "Burundi": "üáßüáÆ",
  "Democratic Republic of the Congo": "üá®üá©",
  "Republic of the Congo": "üá®üá¨",
  "Gabon": "üá¨üá¶",
  "Equatorial Guinea": "üá¨üá∂",
  "Sao Tome and Principe": "üá∏üáπ",
  "Morocco": "üá≤üá¶",
  "Western Sahara": "üá™üá≠",
  "Algeria": "üá©üáø",
  "Tunisia": "üáπüá≥",
  "Libya": "üá±üáæ",
  "Egypt": "üá™üá¨",
  "Western Sahara": "üá™üá≠",
  "Algeria": "üá©üáø",
  "Tunisia": "üáπüá≥",
  "Libya": "üá±üáæ",
  "Mauritania": "üá≤üá∑",
  "Western Sahara": "üá™üá≠",
  "Algeria": "üá©üáø",
  "Tunisia": "üáπüá≥",
  "Libya": "üá±üáæ",
  "Mauritania": "üá≤üá∑",
  "Senegal": "üá∏üá≥",
  "Gambia": "üá¨üá≤",
  "Guinea-Bissau": "üá¨üáº",
  "Guinea": "üá¨üá≥",
  "Sierra Leone": "üá∏üá±",
  "Liberia": "üá±üá∑",
  "Ivory Coast": "üá®üáÆ",
  "Ghana": "üá¨üá≠",
  "Togo": "üáπüá¨",
  "Benin": "üáßüáØ",
  "Niger": "üá≥üá™",
  "Mali": "üá≤üá±",
  "Burkina Faso": "üáßüá´",
  "Nigeria": "üá≥üá¨",
  "Cameroon": "üá®üá≤",
  "Chad": "üáπüá©",
  "Central African Republic": "üá®üá´",
}


def is_valid_bin(bin_number):
    if len(bin_number) > 0:
        return True
    else:
        return False

def get_bin_info(bin_number):
    url = f"{BINLIST_API_URL}{bin_number}/"
    response = requests.get(url)
    if response.status_code == 200:
        bin_info = response.json()
        return bin_info
    return None

def generate_credit_card():
    while True:
        bin_number = random.randint(400000, 599999)
        bin_number_str = str(bin_number)
        if is_valid_bin(bin_number_str):
            fake = Faker()
            expiration_date = fake.credit_card_expire()
            cvv = random.randint(000, 999)
            credit_card_number = f"{bin_number_str}{''.join(random.choice('0123456789') for _ in range(10))}"
            bin_info = get_bin_info(bin_number_str)
            if bin_info:
                country_emoji = bin_info.get('country', {}).get('emoji', 'üåç')
                return bin_number_str, credit_card_number, expiration_date, cvv, bin_info, country_emoji

async def send_message_to_telegram(message, token, chat_id):
    bot = Bot(token=token)
    await bot.send_message(chat_id=chat_id, text=message)

async def send_credit_card_info(bot_token, channel_username):
    valid_bin, credit_card, expiration_date, cvv, bin_info, country_emoji = generate_credit_card()
    country = bin_info.get('country', {}).get('name', 'N/A')
    bank_name = bin_info.get('bank', {}).get('name', 'N/A')

    message = f"{country_emoji}|{credit_card} {expiration_date} {cvv} - {valid_bin}\n"
    message += f"{country} {bank_name}"

    await send_message_to_telegram(message, bot_token, channel_username)

async def main():
    bot_token = "6856406658:AAHIR-yCgZvbGqiOxoygKHCLqhDkXPnQf-4"
    channel_username = "@DARKMETHORDSCRAPPER"

    print("*+++++++++ WELCOME TO MY SCRIPT GUYS ONE PIECE IS HERE! ++++++++++*\n")
    print("*++++++++++++++++ HEY BABY WE ARE LIVE ++++++++++++++++*")
    while True:
        await send_credit_card_info(bot_token, channel_username)
        await asyncio.sleep(1)

if __name__ == "__main__":
    asyncio.run(main())
